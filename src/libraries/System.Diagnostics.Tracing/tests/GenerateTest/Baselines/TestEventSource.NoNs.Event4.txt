// <auto-generated/>
internal unsafe partial class TestEventSource
{
    public partial void Event0(string arg0, string arg1)
    {    
        global::System.Diagnostics.Tracing.EventSource.EventData* datas = stackalloc global::System.Diagnostics.Tracing.EventSource.EventData[2];
        arg0 ??= System.String.Empty;
        datas[0] = new global::System.Diagnostics.Tracing.EventSource.EventData
        {
            DataPointer = (nint)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(global::System.MemoryExtensions.AsSpan(arg0))),
            Size = (arg0.Length + 1) * sizeof(char)
        };
        arg1 ??= System.String.Empty;
        datas[1] = new global::System.Diagnostics.Tracing.EventSource.EventData
        {
            DataPointer = (nint)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(global::System.MemoryExtensions.AsSpan(arg1))),
            Size = (arg1.Length + 1) * sizeof(char)
        };
        WriteEventCore(1, 2, datas);
        OnEvent0(arg0, arg1);
    }

    [global::System.Diagnostics.Tracing.NonEventAttribute]
    partial void OnEvent0(string arg0, string arg1);
}
